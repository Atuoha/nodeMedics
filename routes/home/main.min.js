'use strict';const express=require("express"),app=express(),router=express.Router(),User=require("../../models/User"),bcrypt=require("bcryptjs"),passport=require("passport"),LocalStrategy=require("passport-local").Strategy,Contact=require("../../models/Contact"),Department=require("../../models/Department"),Doctor=require("../../models/Doctor"),Appointment=require("../../models/Appointment"),Research=require("../../models/Research"),Media=require("../../models/Media"),Service=require("../../models/Service"),
Faq=require("../../models/Faq"),Testimony=require("../../models/Testimony");router.all("/*",(a,c,b)=>{a.app.locals.layout="home";b()});
router.get("/",(a,c)=>{const b=[Doctor.countDocuments().exec(),Department.countDocuments().exec(),Research.countDocuments().exec(),Testimony.countDocuments().exec()];Department.find().then(d=>{Doctor.find().then(e=>{Research.find().then(f=>{Media.find().then(g=>{Faq.find().then(k=>{Service.find().then(h=>{Testimony.find().populate("user").then(l=>{Promise.all(b).then(([m,n,p,q])=>{c.render("home",{depts:d,docs:e,labs:f,medias:g,faqs:k,services:h,testimonies:l,doctorsCount:m,deptsCount:n,researchCount:p,
testimoniesCount:q})})}).catch(l=>console.log(l))}).catch(h=>console.log(h))}).catch(k=>console.log(k))}).catch(g=>console.log(g))}).catch(f=>console.log(f))}).catch(e=>console.log(e))}).catch(d=>console.log(d))});router.get("/login",(a,c)=>{a.user?c.redirect("/admin"):c.render("home/login")});router.get("/register",(a,c)=>{a.user?c.redirect("/admin"):c.render("home/register")});
router.post("/register",(a,c)=>{User.findOne({email:a.body.email}).then(b=>{if(b)a.flash("error_msg","Email already exists :) "),c.redirect("/register");else{const d=new User;d.name=a.body.name;d.email=a.body.email;d.password=a.body.password;bcrypt.genSalt(10,(e,f)=>{bcrypt.hash(a.body.password,f,(g,k)=>{g&&console.log(g);d.password=k;d.save().then(h=>{a.flash("success_msg","Account Registered successfully. Login :)");c.redirect("/login")}).catch(h=>console.log(`Issues with saving user: ${h}`))})})}}).catch(b=>
console.log(`Issues: ${b}`))});passport.use(new LocalStrategy({usernameField:"email"},(a,c,b)=>{console.log(`Email: ${a} | Password: ${c}`);User.findOne({email:a}).then(d=>{if(d)bcrypt.compare(c,d.password,(e,f)=>{e&&console.log(e);return f?b(null,d):b(null,!1,{message:"Password mismatch. Try again!"})});else return console.log("Not recognised"),b(null,!1,{message:"Email not recognised!"})}).catch(d=>console.log(`iSSues: ${d}`))}));passport.serializeUser(function(a,c){c(null,a.id)});
passport.deserializeUser(function(a,c){User.findById(a,function(b,d){c(b,d)})});router.post("/login",(a,c,b)=>{passport.authenticate("local",{successRedirect:"/admin",failureRedirect:"/login",failureFlash:!0})(a,c,b)});router.get("/logout",(a,c)=>{a.logout();c.redirect("/")});
router.post("/contact",(a,c)=>{const b=new Contact;b.user=a.user.id;b.subject=a.body.subject;b.message=a.body.message;b.save().then(d=>{a.flash("success_msg","Contact has been created successfully :)");c.redirect("/")}).catch(d=>console.log(d))});
router.post("/appointment",(a,c)=>{const b=new Appointment;b.user=a.user.id;b.doctor=a.body.doctor;b.department=a.body.department;b.date=a.body.date;b.message=a.body.message;b.save().then(d=>{a.flash("success_msg","Appointment created successfully :)");c.redirect("/")}).catch(d=>console.log(d))});module.exports=router;